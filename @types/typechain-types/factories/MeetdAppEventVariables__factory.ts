/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MeetdAppEventVariables,
  MeetdAppEventVariablesInterface,
} from "../MeetdAppEventVariables";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "BoughtTicket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "RefundedTicket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "TransferredTicket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "eventDescription",
        type: "string",
      },
    ],
    name: "UpdatedEventDescription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "eventEndTime",
        type: "uint256",
      },
    ],
    name: "UpdatedEventEndTime",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "eventLocation",
        type: "string",
      },
    ],
    name: "UpdatedEventLocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "eventName",
        type: "string",
      },
    ],
    name: "UpdatedEventName",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "eventOwner",
        type: "address",
      },
    ],
    name: "UpdatedEventOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "eventStartTime",
        type: "uint256",
      },
    ],
    name: "UpdatedEventStartTime",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "eventTotalTickets",
        type: "uint256",
      },
    ],
    name: "UpdatedEventTotalTickets",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "eventReedemableTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "eventSecretWordHash",
        type: "bytes32",
      },
    ],
    name: "UpdatedReedemableTimeAndSecretWordHash",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "attendeesList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "eventAttendees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventDescription",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventLocation",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventNfts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventReedemableTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventRemainingTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventSecretWordHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventTotalTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610498806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806361cec060116100975780638043c9c0116100665780638043c9c0146101d05780638a89c14c146101d85780639434571b146101eb578063d6bd5db1146101f357600080fd5b806361cec0601461019857806364471452146101ab5780636fdbd3f6146101b4578063740ea9a6146101c757600080fd5b806320214134116100d3578063202141341461015e578063270821b61461017e578063297449af146101875780632a6ca7551461019057600080fd5b8063089cdd0c146100fa57806309e52c12146101185780631f4894b11461012e575b600080fd5b6101026101fc565b60405161010f9190610331565b60405180910390f35b61012160085481565b60405161010f9190610351565b61015161013c366004610398565b600e6020526000908152604090205460ff1681565b60405161010f91906103c9565b600b54610171906001600160a01b031681565b60405161010f91906103e0565b61012160095481565b61012160055481565b61010261028a565b600c54610171906001600160a01b031681565b61012160045481565b600a54610171906001600160a01b031681565b61012160065481565b610102610297565b6101716101e63660046103ff565b6102a4565b6101026102ce565b61012160075481565b6000805461020990610436565b80601f016020809104026020016040519081016040528092919081815260200182805461023590610436565b80156102825780601f1061025757610100808354040283529160200191610282565b820191906000526020600020905b81548152906001019060200180831161026557829003601f168201915b505050505081565b6003805461020990610436565b6001805461020990610436565b600d81815481106102b457600080fd5b6000918252602090912001546001600160a01b0316905081565b6002805461020990610436565b60005b838110156102f65781810151838201526020016102de565b50506000910152565b6000610309825190565b8084526020840193506103208185602086016102db565b601f01601f19169290920192915050565b6020808252810161034281846102ff565b9392505050565b805b82525050565b6020810161035f8284610349565b92915050565b60006001600160a01b03821661035f565b61037f81610365565b811461038a57600080fd5b50565b803561035f81610376565b6000602082840312156103ad576103ad600080fd5b60006103b9848461038d565b949350505050565b80151561034b565b6020810161035f82846103c1565b61034b81610365565b6020810161035f82846103d7565b8061037f565b803561035f816103ee565b60006020828403121561041457610414600080fd5b60006103b984846103f4565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061044a57607f821691505b60208210810361045c5761045c610420565b5091905056fea2646970667358221220e608112e99bc8b167b4fd8dfe311494f03b1a7a69c5c9fc64823f874f04b0e5564736f6c63430008130033";

type MeetdAppEventVariablesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MeetdAppEventVariablesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MeetdAppEventVariables__factory extends ContractFactory {
  constructor(...args: MeetdAppEventVariablesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MeetdAppEventVariables";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MeetdAppEventVariables> {
    return super.deploy(overrides || {}) as Promise<MeetdAppEventVariables>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MeetdAppEventVariables {
    return super.attach(address) as MeetdAppEventVariables;
  }
  connect(signer: Signer): MeetdAppEventVariables__factory {
    return super.connect(signer) as MeetdAppEventVariables__factory;
  }
  static readonly contractName: "MeetdAppEventVariables";
  public readonly contractName: "MeetdAppEventVariables";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MeetdAppEventVariablesInterface {
    return new utils.Interface(_abi) as MeetdAppEventVariablesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MeetdAppEventVariables {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MeetdAppEventVariables;
  }
}
