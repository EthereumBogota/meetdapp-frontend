/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MeetdAppEventVariables,
  MeetdAppEventVariablesInterface,
} from "../MeetdAppEventVariables";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "BoughtTicket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "RefundedTicket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "TransferredTicket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "eventDescription",
        type: "string",
      },
    ],
    name: "UpdatedEventDescription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "eventEndTime",
        type: "uint256",
      },
    ],
    name: "UpdatedEventEndTime",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "eventLocation",
        type: "string",
      },
    ],
    name: "UpdatedEventLocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "eventName",
        type: "string",
      },
    ],
    name: "UpdatedEventName",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "eventOwner",
        type: "address",
      },
    ],
    name: "UpdatedEventOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "eventStartTime",
        type: "uint256",
      },
    ],
    name: "UpdatedEventStartTime",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "eventTotalTickets",
        type: "uint256",
      },
    ],
    name: "UpdatedEventTotalTickets",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "eventReedemableTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "eventSecretWordHash",
        type: "bytes32",
      },
    ],
    name: "UpdatedReedemableTimeAndSecretWordHash",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "eventAttendees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventDescription",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventLocation",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventNfts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventReedemableTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventRemainingTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventSecretWordHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventTotalTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061041e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806361cec0601161008c578063740ea9a611610066578063740ea9a6146101bc5780638043c9c0146101c55780639434571b146101cd578063d6bd5db1146101d557600080fd5b806361cec0601461018d57806364471452146101a05780636fdbd3f6146101a957600080fd5b806320214134116100c85780632021413414610153578063270821b614610173578063297449af1461017c5780632a6ca7551461018557600080fd5b8063089cdd0c146100ef57806309e52c121461010d5780631f4894b114610123575b600080fd5b6100f76101de565b60405161010491906102e9565b60405180910390f35b61011660085481565b6040516101049190610309565b610146610131366004610350565b600d6020526000908152604090205460ff1681565b6040516101049190610381565b600b54610166906001600160a01b031681565b6040516101049190610398565b61011660095481565b61011660055481565b6100f761026c565b600c54610166906001600160a01b031681565b61011660045481565b600a54610166906001600160a01b031681565b61011660065481565b6100f7610279565b6100f7610286565b61011660075481565b600080546101eb906103bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610217906103bc565b80156102645780601f1061023957610100808354040283529160200191610264565b820191906000526020600020905b81548152906001019060200180831161024757829003601f168201915b505050505081565b600380546101eb906103bc565b600180546101eb906103bc565b600280546101eb906103bc565b60005b838110156102ae578181015183820152602001610296565b50506000910152565b60006102c1825190565b8084526020840193506102d8818560208601610293565b601f01601f19169290920192915050565b602080825281016102fa81846102b7565b9392505050565b805b82525050565b602081016103178284610301565b92915050565b60006001600160a01b038216610317565b6103378161031d565b811461034257600080fd5b50565b80356103178161032e565b60006020828403121561036557610365600080fd5b60006103718484610345565b949350505050565b801515610303565b602081016103178284610379565b6103038161031d565b60208101610317828461038f565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806103d057607f821691505b6020821081036103e2576103e26103a6565b5091905056fea264697066735822122078605ffea58507d5ab9cf149aa74dea5a03e4619d7bb0487be7382b3c180908b64736f6c63430008130033";

type MeetdAppEventVariablesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MeetdAppEventVariablesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MeetdAppEventVariables__factory extends ContractFactory {
  constructor(...args: MeetdAppEventVariablesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MeetdAppEventVariables";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MeetdAppEventVariables> {
    return super.deploy(overrides || {}) as Promise<MeetdAppEventVariables>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MeetdAppEventVariables {
    return super.attach(address) as MeetdAppEventVariables;
  }
  connect(signer: Signer): MeetdAppEventVariables__factory {
    return super.connect(signer) as MeetdAppEventVariables__factory;
  }
  static readonly contractName: "MeetdAppEventVariables";
  public readonly contractName: "MeetdAppEventVariables";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MeetdAppEventVariablesInterface {
    return new utils.Interface(_abi) as MeetdAppEventVariablesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MeetdAppEventVariables {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MeetdAppEventVariables;
  }
}
